const config = require('./Config/config.json');
const Discord = require('discord.js');
const robot = new Discord.Client();
const Channels = require('./Config/channels.json');
const re = /([\u2700-\u27BF]|[\uE000-\uF8FF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|[\u2011-\u26FF]|\uD83E[\uDD10-\uDDFF])/g;

//? —Å–ø–∏—Å–æ–∫ —Ñ—É–Ω–∫—Ü–∏–∏

function clearMessage(robot, mess, args){
  try{
    const emojis = robot.emojis.cache.get("813422124463161405");
    if(mess.member.roles.cache.get(config.roledeveloper)){
      const arggs = mess.content.split(' ').slice(1); // –í—Å–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∑–∞ –∏–º–µ–Ω–µ–º –∫–æ–º–∞–Ω–¥—ã —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º
      const amount = arggs.join(' '); // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã
      if (!amount) return mess.channel.send('–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏, —Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å!'); // –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–¥–∞–Ω –ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
      if (isNaN(amount)) return mess.channel.send('–≠—Ç–æ –Ω–µ —á–∏—Å–ª–æ!'); // –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —á–∏—Å–ª–æ–º –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 
      if (amount > 100) return mess.channel.send('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å 100 —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ —Ä–∞–∑'); // –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–∏—Å–ª–æ–º –±–æ–ª—å—à–µ 100
      if (amount < 1) return mess.channel.send('–í—ã –¥–æ–ª–∂–Ω—ã –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ —á–µ–º 1'); // –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–∏—Å–ª–æ–º –º–µ–Ω—å—à–µ 1
        
      async function delete_messages() { // –û–±—ä—è–≤–ª–µ–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
        await mess.channel.messages.fetch({
              imit: amount
        }).then(messages => {
          mess.channel.bulkDelete(messages, true)
          mess.channel.send(`–£–¥–∞–ª–µ–Ω–æ ${amount} —Å–æ–æ–±—â–µ–Ω–∏–π!`)
        }).catch(console.error);
      }
      delete_messages(); // –í—ã–∑–æ–≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    }else{
      mess.channel.send(`–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã! ${emojis}`)
    }
  }
  catch(e){
    console.log(`[ERROR] ${e}`)
    mess.channel.send("–£ –º–µ–Ω—è –æ—à–∏–±–∫–∞!")
  }
 
}

function ping(robot, mess, args) {
  try{
    if(mess.member.roles.cache.get(config.roledeveloper)){
      const check = robot.emojis.cache.get('813421996184567808')
      mess.channel.send(`–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —É—Å–ø–µ—à–Ω–æ! ${check}`)
    }else{
      mess.channel.send("–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
    }
  }catch(e){
    console.log(`[ERROR] ${e}`)
    mess.channel.send("–£ –º–µ–Ω—è –æ—à–∏–±–∫–∞!")
  }
  
}

function info_channels(robot, mess, args) {

  const arr = Object.values(Channels.channels);

  var result = [];

  const category = robot.channels.cache.find(ct => ct.name.startsWith("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ö–∞–Ω–∞–ª–∞ üìä"));

  for (let i = 0; i < arr.length; i++) {
    result.push(arr[i].Name);
  }

  function channels() {
    if (eval("for (let i = 0; i < result.length; i++) {robot.channels.cache.find(chnl => chnl.name.startsWith(result[i]))}")) {
      mess.channel.send("[–û—à–∏–±–∫–∞]: –î–∞–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç!");
    }
    else{
      for(const key in Channels.channels){
        mess.guild.channels.create(`${Channels.channels[key].Name} ${eval(Channels.channels[key].count_users)}`,{
          type: "voice",
          permissionOverwrites: [
            {
              id: mess.guild.roles.everyone,
              allow: [
              'VIEW_CHANNEL',
              'READ_MESSAGE_HISTORY'
              ],
              deny: [
              'CONNECT',
              'MANAGE_CHANNELS',
              'SPEAK'
              ]
            },
            {
              id: mess.guild.roles.cache.get(config.userRole),
              allow: ['VIEW_CHANNEL', 'READ_MESSAGE_HISTORY'],
              deny: ['CONNECT','MANAGE_CHANNELS','SPEAK']
            },
            {
              id: mess.guild.roles.cache.get(config.role_Rinka),
              allow: ['VIEW_CHANNEL','MANAGE_CHANNELS','READ_MESSAGE_HISTORY'],
            }
          ],
          parent: robot.channels.cache.find(ct => ct.name.startsWith("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ö–∞–Ω–∞–ª–∞ üìä")).id,
        })
        .catch(console.error);
      }
    }
  }

  if (category) {
    channels();
  }else{
    mess.guild.channels.create('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ö–∞–Ω–∞–ª–∞ üìä',{
      type: "category",
      permissionOverwrites: [
        {
          id: mess.guild.roles.everyone,
          allow: ['READ_MESSAGE_HISTORY'],
          deny: ['CONNECT', 'MANAGE_CHANNELS','SPEAK','VIEW_CHANNEL']
        }
      ],
      position: 0,
    })
    .catch(console.error)
    .then(setTimeout(channels, 390));
  }
}

//? –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
var comms_list = [
  {
    name: "ping",
    out: ping
  },
  {
    name: "clear",
    out: clearMessage,
  },
  {
    name: "createStatschannels",
    out: info_channels
  }
];

module.exports.comms = comms_list;